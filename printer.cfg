[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos   : True  ; use custom park coordinates for x,y [True/False]
variable_custom_park_x    : 75.0  ; custom x position; value must be within your defined min and max of X
variable_custom_park_y    : 150.0 ; custom y position; value must be within your defined min and max of Y
variable_custom_park_dz   : 2.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
variable_retract          : 1.0   ; the value to retract while PAUSE
variable_cancel_retract   : 5.0   ; the value to retract while CANCEL_PRINT
variable_speed_retract    : 35.0  ; retract speed in mm/s
variable_unretract        : 1.0   ; the value to unretract while RESUME
variable_speed_unretract  : 35.0  ; unretract speed in mm/s
variable_speed_hop        : 15.0  ; z move speed in mm/s
variable_speed_move       : 100.0 ; move speed in mm/s
variable_park_at_cancel   : True  ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
variable_park_at_cancel_x : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
variable_park_at_cancel_y : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
# !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
variable_use_fw_retract   : False ; use fw_retraction instead of the manual version [True/False]
variable_idle_timeout     : 0     ; time in sec until idle_timeout kicks in. Value 0 means that no value will be set or restored
variable_runout_sensor    : ""    ; If a sensor is defined, it will be used to cancel the execution of RESUME in case no filament is detected.
#                                   Specify the config name of the runout sensor e.g "filament_switch_sensor runout". Hint use the same as in your printer.cfg
#
# Custom macros, for simple operations like setting a status LED. Only  single line commands are supported.
variable_user_pause_macro : ""    ; After PAUSE_BASE
variable_user_resume_macro: ""    ; Before RESUME_BASE
variable_user_cancel_macro: ""    ; Before CANCEL_PRINT_BASE
gcode:

[include mainsail.cfg]
[include macros.cfg]
[include temps.cfg]

# This file contains pin mappings for the stock 2020 Creality Ender 3
# V2. To use this config, during "make menuconfig" select the
# STM32F103 with a "28KiB bootloader" and serial (on USART1 PA10/PA9)
# communication.

# If you prefer a direct serial connection, in "make menuconfig"
# select "Enable extra low-level configuration options" and select
# serial (on USART3 PB11/PB10), which is broken out on the 10 pin IDC
# cable used for the LCD module as follows:
# 3: Tx, 4: Rx, 9: GND, 10: VCC

# Flash this firmware by copying "out/klipper.bin" to a SD card and
# turning on the printer with the card inserted. The firmware
# filename must end in ".bin" and must not match the last filename
# that was flashed.

# See docs/Config_Reference.md for a description of parameters.

[stepper_x]
step_pin: PC2
dir_pin: PB9
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA5
position_endstop: 2
position_max: 247
homing_speed: 90
second_homing_speed: 20

[stepper_y]
step_pin: PB8
dir_pin: PB7
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA6
position_endstop: 0
position_max: 231
homing_speed: 90
second_homing_speed: 20

[stepper_z]
step_pin: PB6
dir_pin: !PB5
enable_pin: !PC3
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
position_min: -0.2
position_max: 250

[safe_z_home]
home_xy_position: 161, 118
speed: 175
z_hop: 10
z_hop_speed: 15

[extruder]
max_extrude_only_distance: 100.0
step_pin: PB4
dir_pin: PB3
enable_pin: !PC3
microsteps: 16
rotation_distance: 34.406
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA1
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC5
control: pid
# Tuned with 'PID_CALIBRATE HEATER=extruder TARGET=200'
pid_Kp: 26.463
pid_Ki: 1.521
pid_Kd: 115.113
min_temp: 0
max_temp: 250

[heater_bed]
heater_pin: PA2
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
control: pid
# Tuned with 'PID_CALIBRATE HEATER=heater_bed TARGET=50'
pid_Kp: 69.608
pid_Ki: 0.874
pid_Kd: 1386.068
min_temp: 0
max_temp: 130

[fan]
pin: PA0

[mcu]
serial: /dev/serial/by-id/<your-mcu-id>
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100

[bltouch]
sensor_pin: ^PB1
control_pin: PB0
stow_on_each_sample: false
probe_with_touch_mode: true
x_offset: -45.7
y_offset: -8.0
z_offset: 1.698

[bed_mesh]
speed: 120
mesh_min: 0, 0
mesh_max: 201, 223
probe_count: 5, 5
fade_start: 1.0
fade_end: 10.0
fade_target: 0
algorithm: bicubic

[screws_tilt_adjust]
speed: 100
screw1: 75, 35
screw4: 75, 210
screw2: 246, 35
screw3: 246, 210
screw_thread: CW-M4
horizontal_move_z: 5
screw1_name: SCREW_FL
screw2_name: SCREW_FR
screw3_name: SCREW_RR
screw4_name: SCREW_RL
